lmmm = c(min(combb$Corr), max(combb$Corr))
dp10 <- ggplot(combb, aes(x=Met, y=Corr)) +
facet_grid(rows = vars(Treatment))+
geom_boxplot(aes(fill=Kernel), outlier.size=0.5, outlier.alpha = 0.7, lwd=0.2)+
labs(x="Metabolite", y = "Predictive correlation") +
theme_bw()+
scale_y_continuous(limits=c(-0.60, 0.90), breaks=seq(-0.60, 0.90, 0.2)) +
scale_fill_manual(values = ggplot2::alpha(my_colors, 0.7))+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))+
# geom_hline(data=mu, aes(yintercept=corr.mean, color=Treatment), linetype='solid', linewidth = 1)+
scale_color_manual(values = my_colors)
dp10
dev.print(pdf, file="../temp/DLs_boxplot.pdf", height = 10, width = 20)
lmmm
-0.60 < -0.6089117
combb = rbind.data.frame(PreCorr,
PreCorr_vgg16,
PreCorr_vgg16_RR,
PreCorr_vgg16_RF,
PreCorr_resnet,
PreCorr_eff)
my_colors <- RColorBrewer::brewer.pal(11, 'Spectral')[c(10, 9,8, 4, 3, 2)]
lmmm = c(min(combb$Corr), max(combb$Corr))
dp10 <- ggplot(combb, aes(x=Met, y=Corr)) +
facet_grid(rows = vars(Treatment))+
geom_boxplot(aes(fill=Kernel), outlier.size=0.5, outlier.alpha = 0.7, lwd=0.2)+
labs(x="Metabolite", y = "Predictive correlation") +
theme_bw()+
scale_y_continuous(limits=c(-0.61, 0.90), breaks=seq(-0.60, 0.90, 0.2)) +
scale_fill_manual(values = ggplot2::alpha(my_colors, 0.7))+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))+
# geom_hline(data=mu, aes(yintercept=corr.mean, color=Treatment), linetype='solid', linewidth = 1)+
scale_color_manual(values = my_colors)
dp10
dev.print(pdf, file="../temp/DLs_boxplot.pdf", height = 10, width = 20)
combb = rbind.data.frame(PreCorr,
PreCorr_vgg16_RF)
# PreCorr_vgg16,
# PreCorr_vgg16_RR,
# PreCorr_vgg16_RF,
# PreCorr_resnet,
# PreCorr_eff)
my_colors <- RColorBrewer::brewer.pal(11, 'Spectral')[c(10, 9,8, 4, 3, 2)]
lmmm = c(min(combb$Corr), max(combb$Corr))
dp10 <- ggplot(combb, aes(x=Met, y=Corr)) +
facet_grid(rows = vars(Treatment))+
geom_boxplot(aes(fill=Kernel), outlier.size=0.5, outlier.alpha = 0.7, lwd=0.2)+
labs(x="Metabolite", y = "Predictive correlation") +
theme_bw()+
scale_y_continuous(limits=c(-0.61, 0.90), breaks=seq(-0.60, 0.90, 0.2)) +
scale_fill_manual(values = ggplot2::alpha(my_colors, 0.7))+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))+
# geom_hline(data=mu, aes(yintercept=corr.mean, color=Treatment), linetype='solid', linewidth = 1)+
scale_color_manual(values = my_colors)
dp10
dev.print(pdf, file="../temp/DLs_boxplot.pdf", height = 10, width = 20)
combb = rbind.data.frame(PreCorr,
# PreCorr_vgg16_RF)
PreCorr_vgg16,
PreCorr_vgg16_RR,
PreCorr_vgg16_RF,
PreCorr_resnet,
PreCorr_eff)
my_colors <- RColorBrewer::brewer.pal(11, 'Spectral')[c(10, 9,8, 4, 3, 2)]
lmmm = c(min(combb$Corr), max(combb$Corr))
dp10 <- ggplot(combb, aes(x=Met, y=Corr)) +
facet_grid(rows = vars(Treatment))+
geom_boxplot(aes(fill=Kernel), outlier.size=0.5, outlier.alpha = 0.7, lwd=0.2)+
labs(x="Metabolite", y = "Predictive correlation") +
theme_bw()+
scale_y_continuous(limits=c(-0.61, 0.90), breaks=seq(-0.60, 0.90, 0.2)) +
scale_fill_manual(values = ggplot2::alpha(my_colors, 0.7))+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))+
# geom_hline(data=mu, aes(yintercept=corr.mean, color=Treatment), linetype='solid', linewidth = 1)+
scale_color_manual(values = my_colors)
dp10
dev.print(pdf, file="../temp/DLs_boxplot.pdf", height = 10, width = 20)
vgg_mu <- pred_mean_generator(PreCorr_vgg16)
vgg_mu_RR <- pred_mean_generator(PreCorr_vgg16_RR)
vgg_mu_RF <- pred_mean_generator(PreCorr_vgg16_RF)
resnet_mu <- pred_mean_generator(PreCorr_resnet)
eff_mu <- pred_mean_generator(PreCorr_eff)
BGLR_G_mu <- pred_mean_generator(PreCorr)
BGLR_GK_mu <- pred_mean_generator(PreCorr_GK)
mega_G_mu <- pred_mean_generator(PreCorr_mega_G) #MegaLMM_test.Rmd
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ggplot2)
source("functions.R")
met_names = met_name_func(mode = 'rrr')
load("../temp/mega/fa4/Control_MegaLMM.rda")
corRL_con = corRL
load("../temp/mega/Stress_MegaLMM.rda")
corRL_trt = corRL
PreCorr_mega_func <- function(corRL, treatment, met_names){
corR.wide = do.call(rbind, corRL)
colnames(corR.wide) = met_names
corR.wide = cbind.data.frame(CV = 1:100,
corR.wide,
Treatment = treatment)
corR.long = tidyr::gather(corR.wide, key="Met", value="Corr", -c(CV, Treatment))
}
PreCorr_mega_G=rbind(PreCorr_mega_func(corRL=corRL_con, treatment="Control", met_names=met_names),
PreCorr_mega_func(corRL=corRL_trt, treatment="Stress", met_names=met_names))
PreCorr_mega_G$Met <- factor(PreCorr_mega_G$Met, levels = met_names)
PreCorr_mega_G$Kernel <- "Mega-G"
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lme4)
library(readxl)
source("./functions.R")
path = "../temp/mega/GK/GK_0.2"
PreCorr0.2 = load_pred_corr_func(path=path, kernel = "GK_0.2", namm="mega_")
path = "../temp/mega/GK/GK_0.4"
PreCorr0.4 = load_pred_corr_func(path=path, kernel = "GK_0.4", namm="mega_")
path = "../temp/mega/GK/GK_0.6"
PreCorr0.6 = load_pred_corr_func(path=path, kernel = "GK_0.6", namm="mega_")
path = "../temp/mega/GK/GK_0.8"
PreCorr0.8 = load_pred_corr_func(path=path, kernel = "GK_0.8", namm="mega_")
vgg_mu <- pred_mean_generator(PreCorr_vgg16)
vgg_mu_RR <- pred_mean_generator(PreCorr_vgg16_RR)
vgg_mu_RF <- pred_mean_generator(PreCorr_vgg16_RF)
resnet_mu <- pred_mean_generator(PreCorr_resnet)
eff_mu <- pred_mean_generator(PreCorr_eff)
BGLR_G_mu <- pred_mean_generator(PreCorr)
BGLR_GK_mu <- pred_mean_generator(PreCorr_GK)
mega_G_mu <- pred_mean_generator(PreCorr_mega_G) #MegaLMM_test.Rmd
mega_GK_mu0.2 <- pred_mean_generator(PreCorr0.2) #GK.Rmd
mega_GK_mu0.4 <- pred_mean_generator(PreCorr0.4)
mega_GK_mu0.6 <- pred_mean_generator(PreCorr0.6)
mega_GK_mu0.8 <- pred_mean_generator(PreCorr0.8)
mega_GK_comp = cbind(GK0.2 = mega_GK_mu0.2$corr.mean,
GK0.4 = mega_GK_mu0.4$corr.mean,
GK0.6 = mega_GK_mu0.6$corr.mean,
GK0.8 = mega_GK_mu0.8$corr.mean)
mega_GK_mu = apply(mega_GK_comp, 1, max)
mega_GK_mu = cbind.data.frame(mega_G_mu[,1:2],
corr.mean = mega_GK_mu)
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(11, 'PRGn')[c(1:5, 10)]
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
dff_resnet,
dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
# scale_y_continuous(limits=c(-1038, 862), breaks=seq(-1038,862,100)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
library(RColorBrewer)
par(mar=c(3,4,2,2))
display.brewer.all()
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(9, 'Set1')
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
dff_resnet,
dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
# scale_y_continuous(limits=c(-1038, 862), breaks=seq(-1038,862,100)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(9, 'Set1')
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
# dff_resnet,
# dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
# scale_y_continuous(limits=c(-1038, 862), breaks=seq(-1038,862,100)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(9, 'Set1')
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
# dff_resnet,
# dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
scale_y_continuous(limits=c(-100,100)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(9, 'Set1')
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
# dff_resnet,
# dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
scale_y_continuous(limits=c(-100,100)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(9, 'Set1')
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
# dff_resnet,
# dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
scale_y_continuous(limits=c(0,100)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
lmm
lmmm
limm
# mm <- plyr::ddply(G_GK_dff, c("Treatment"), summarise, corr.mean=mean(Corr_diff, na.rm=T), corr.me = median(Corr_diff, na.rm=T))
dff_vgg=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu,
Method="VGG")
dff_vgg_RR=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RR")
dff_vgg_RF=pred_dff_generator(df1=BGLR_G_mu,
df2=vgg_mu_RR,
Method="VGG-RF")
dff_resnet=pred_dff_generator(df1=BGLR_G_mu,
df2=resnet_mu,
Method="ResNet")
dff_eff=pred_dff_generator(df1=BGLR_G_mu,
df2=eff_mu,
Method="EfficientNet")
dff_bglr_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=BGLR_GK_mu,
Method="RKHS")
dff_mega_g=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_G_mu,
Method="MegaLMM-G")
dff_mega_gk=pred_dff_generator(df1=BGLR_G_mu,
df2=mega_GK_mu,
Method="MegaLMM-GK")
my_colors <- RColorBrewer::brewer.pal(9, 'Set1')
ccc = rbind(dff_vgg_RR,
dff_vgg_RF,
dff_vgg,
# dff_resnet,
# dff_eff,
dff_bglr_gk)
ccc$Method = factor(ccc$Method, levels=c("VGG", "VGG-RR", "VGG-RF", "ResNet", "EfficientNet", "RKHS"))
# ccc = rbind(dff_bglr_gk, dff_mega_g, dff_mega_gk, dff_bglr_vgg)
# ccc$Method = factor(ccc$Method, levels=c("RKHS", "MegaLMM-G", "MegaLMM-GK", "VGG"))
limm = c(floor(min(ccc$value)), ceiling(max(ccc$value)))
dp_diff <- ggplot(ccc, aes(x=Met, y=value, fill=Method)) +
geom_bar(stat="identity",position="dodge")+
facet_grid(rows = vars(Treatment))+
labs(x="Metabolite", y = "Percentage difference (%)") +
theme_bw()+
geom_hline(aes(yintercept = 0), color = 'grey', linetype='solid', linewidth = 0.3)+
# scale_y_continuous(limits=c(limm[1], limm[2]), breaks=seq(limm[1],limm[2],100)) +
scale_y_continuous(limits=c(0,400)) +
scale_fill_manual(values = alpha(my_colors, 0.8))+
# scale_color_manual(values = my_colors)+
theme(axis.text.x=element_text(size=8, angle=90, hjust=0.95, vjust=0.2),
axis.text.y=element_text(size=8))
dp_diff
dev.print(pdf, file="../temp/DL_dff_barplot11.pdf", height = 10, width = 20)
# summary(ccc$value)
View(mu_perMet)
View(ccc)
View(mu_perMet)
View(ccc)
dim(ccc)
